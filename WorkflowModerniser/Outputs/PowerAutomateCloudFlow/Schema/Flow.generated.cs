

//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------

namespace WorkflowModerniser.Outputs.PowerAutomateCloudFlow.Schema
{
#pragma warning disable // Disable all warnings

	[System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.9.0.0 (Newtonsoft.Json v13.0.0.0)")]
	public partial class Root
	{

		[System.Text.Json.Serialization.JsonPropertyName("connectionReferences")]

		[System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
		public object ConnectionReferences { get; set; }

		[System.Text.Json.Serialization.JsonPropertyName("definition")]

		[System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]
		public Definition Definition { get; set; }


		private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

		[System.Text.Json.Serialization.JsonExtensionData]
		public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
		{
			get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
			set { _additionalProperties = value; }
		}

		public string ToJson()
		{

			var options = new System.Text.Json.JsonSerializerOptions();

			return System.Text.Json.JsonSerializer.Serialize(this, options);

		}
		public static Root FromJson(string data)
		{

			var options = new System.Text.Json.JsonSerializerOptions();

			return System.Text.Json.JsonSerializer.Deserialize<Root>(data, options);

		}

	}
}